syntax = "proto3";
import "shared/data_value.proto";
import "google/protobuf/struct.proto";

package sjs.query;

message RowInsert {
    string table_name = 1;
    optional string id = 2;
    map<string, sjs.shared.DataValue> row_values = 3;
}

// Define the request message that contains a list of RowInsert.
message InsertRowsRequest {
    repeated RowInsert rows = 1;
}

// Define the response message that can return a success or failure status.
message InsertRowsResponse {
    bool success = 1;
    string message = 2; // Optional message to provide more info (like an error description).
}

// Define the gRPC service.
service ProtoRowInsertService {
    // RPC for inserting rows into a table.
    rpc InsertRows (InsertRowsRequest) returns (InsertRowsResponse);
}

// Define the QueryVal struct
message QueryVal {
    string key = 1;
    string filter_type = 2;
    sjs.shared.DataValue value = 3;
}

// Define QueryOps enum as a message with a oneof for the different variants
message QueryOps {
    oneof operation {
        AndOp and_op = 1;
        OrOp or_op = 2;
        QueryVal condition = 3;
    }
}

// Message for And operation (repeated QueryOps for nested operations)
message AndOp {
    repeated QueryOps ops = 1;
}

// Message for Or operation (repeated QueryOps for nested operations)
message OrOp {
    repeated QueryOps ops = 1;
}

message QueryDataRequest {
    string table_name = 1;
    QueryOps query = 2;
}

message DataMap {
    map<string, sjs.shared.DataValue> values = 1;
}

message QueryResponse {
    repeated DataMap values = 1;
}

service ProtoQueryService {
    // RPC for inserting rows into a table.
    rpc QueryRows (QueryDataRequest) returns (QueryResponse);
}

message CustomQueryRequest {
    string table_name = 1;
    string identifier = 2;
    string req = 3;
}

message CustomQueryResponse {
    google.protobuf.Value value = 1;
}

service ProtoCustomQueryService {
    rpc CustomQuery(CustomQueryRequest) returns (CustomQueryResponse);
}