name: Publish

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cross: false

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            cross: false

          - os: macos-13
            target: x86_64-apple-darwin
            cross: false

          - os: macos-latest
            target: aarch64-apple-darwin
            cross: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --color always --release --locked --target ${{ matrix.target }}
          use-cross: ${{ matrix.cross }}

      - name: Get Binary path
        id: binary
        run: echo "::set-output name=path::target/${{ matrix.target }}/release/schemejs${{ runner.os == 'windows' && '.exe' || '' }}"

      - name: Zip Builds
        shell: pwsh
        run: Compress-Archive -CompressionLevel Optimal -Force -Path ${{ steps.binary.outputs.path }}, README.md, LICENSE -DestinationPath schemejs-${{ matrix.target }}.zip

      - name: Upload Release Builds
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: schemejs-${{ matrix.target }}.zip
          if-no-files-found: error
          retention-days: 1

  publish:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Download Builds
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          prerelease: contains(github.event.inputs.tag, '-')
          discussionCategory: 'announcements'
          draft: true
          allowUpdates: true
          replacesArtifacts: true
          artifacts: 'artifacts/release/*.zip'
          generateReleaseNotes: true
          token: ${{ github.token }}
